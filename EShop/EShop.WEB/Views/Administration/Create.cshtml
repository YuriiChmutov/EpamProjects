@model EShop.DAL.Entities.Product

@{
    ViewBag.Title = "Добавить";
    HtmlHelper.ClientValidationEnabled = false;
}
<div class=" ">
    @Html.ActionLink("Назад к списку", "Index", null, new { @class = "btn btn-light" })
</div>
<h2>Добавить новый продукт</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">

        <hr />
        <div class="col-12">
            <div class="row">

                <div class="col-lg-8 col-xl-8 col-md-12 col-sm-12">
                    <div class="row">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                       

                        <div class="form-group col-12">

                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-lg-12 col-xl-12 col-md-12 col-sm-12 col-12" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-12">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control col-lg-12 col-xl-12 col-md-12 col-sm-12 col-12", @rows = 11 } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>

                <div class="col-lg-4 col-xl-4 col-md-12 col-sm-12">
                    <div class="row">

                        <div class="form-group col-12">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control col-12" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-12">
                            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control col-12" } })
                                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-12">
                            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control col-12" } })
                                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-12">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control col-12" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-12">
                            <label class="control-label col-md-2">Категория</label>
                            <div class="col-md-10">
                                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control col-12" })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="container">
        <div class="row">
            <div class="">
                <input type="submit" value="Сохранить" class="btn btn-dark ml-4 ml-lg-3 ml-xl-3 ml-md-3 ml-sm-3" />
            </div>
            @Html.ActionLink("Отменить", "Index", null, new {
                    @class = "btn btn-light ml-2"
            })
        </div>
    </div>
}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    //для того, чтобы EditorFor принимал decimal с запятой вместо точки
    // переопределение валидации на стороне клиента
    $.validator.methods.range = function (value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    }

    $.validator.methods.number = function (value, element) {
        return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
    }
    </script>
}
